# Generated by Django 5.1 on 2025-02-18 12:10

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import shop.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("category_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        db_index=True, help_text="Название категории", max_length=200, unique=True
                    ),
                ),
                (
                    "text",
                    models.CharField(blank=True, help_text="Описание категории", max_length=400),
                ),
                (
                    "visibility",
                    models.BooleanField(default=True, help_text="Указывает видимость категории"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("product_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(db_index=True, help_text="Название товара", max_length=200),
                ),
                ("description", models.TextField(default=None, null=True)),
                ("price", models.FloatField(default=0.0, help_text="Цена товара")),
                ("weight", models.FloatField(default=0.0, help_text="Вес товара в киллограммах")),
                ("bonus", models.IntegerField(default=0)),
                (
                    "visibility",
                    models.BooleanField(default=True, help_text="Указывает видимость в выдаче"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        error_messages={"unique": "Пользователь с таким email уже существует."},
                        help_text="Ваш email",
                        max_length=254,
                        unique=True,
                    ),
                ),
                ("user_fio", models.CharField(db_index=True, help_text="Ф.И.О.", max_length=200)),
                (
                    "phone",
                    models.CharField(
                        db_index=True,
                        error_messages={
                            "unique": "Пользователь с таким номером телефона уже существует."
                        },
                        help_text="Номер телефона",
                        max_length=12,
                        unique=True,
                    ),
                ),
                (
                    "bd",
                    models.DateField(default=django.utils.timezone.now, help_text="Дата рождения"),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now)),
                ("last_login", models.DateTimeField(null=True)),
                ("is_email_verified", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", shop.models.AccountManager()),
            ],
        ),
        migrations.CreateModel(
            name="LimitTimeProduct",
            fields=[
                ("limittimeproduct_id", models.AutoField(primary_key=True, serialize=False)),
                ("price", models.FloatField()),
                ("ammount", models.IntegerField()),
                ("due", models.DateTimeField()),
                ("task_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "product_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="shop.product"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductPhoto",
            fields=[
                ("photo_id", models.AutoField(primary_key=True, serialize=False)),
                ("photo_url", models.CharField(help_text="URL фотографии", max_length=200)),
                (
                    "is_main",
                    models.BooleanField(
                        default=False, help_text="Является ли эта фотография основной", null=True
                    ),
                ),
                (
                    "photo_description",
                    models.CharField(help_text="описание фотографии", max_length=200, null=True),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="shop.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PromoSystem",
            fields=[
                ("promo_id", models.AutoField(primary_key=True, serialize=False)),
                ("description", models.CharField(blank=True, max_length=400, null=True)),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.MaxLengthValidator(10),
                            django.core.validators.RegexValidator(
                                message="Промокод должен состоять только из букв и цифр.",
                                regex="^[A-Za-zА-Яа-я0-9]*$",
                            ),
                        ],
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("delivery", "Бесплатная доставка"),
                            ("product_discount", "Скидка на товар"),
                            ("cart_discount", "Скидка на корзину"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "min_sum",
                    models.FloatField(
                        blank=True,
                        default=1,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("amount", models.FloatField(blank=True, null=True)),
                ("procentage", models.FloatField(blank=True, null=True)),
                ("usage_count", models.IntegerField(default=0)),
                ("one_time", models.BooleanField(default=False)),
                ("start", models.DateTimeField(default=django.utils.timezone.now)),
                ("end", models.DateTimeField()),
                ("task_id_start", models.CharField(blank=True, max_length=255, null=True)),
                ("task_id_end", models.CharField(blank=True, max_length=255, null=True)),
                ("active", models.BooleanField(default=True)),
                (
                    "promo_product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="shop.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PromoCodeUseg",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "promo_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="shop.promosystem"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subcategory",
            fields=[
                ("subcategory_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        db_index=True, help_text="Название подкатегории", max_length=200
                    ),
                ),
                ("text", models.TextField(blank=True, help_text="Описание подкатегории")),
                (
                    "visibility",
                    models.BooleanField(default=True, help_text="Указывает видимость категории"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Основная категория",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="shop.category",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="product",
            name="subcategory",
            field=models.ManyToManyField(related_name="products", to="shop.subcategory"),
        ),
        migrations.CreateModel(
            name="Discount",
            fields=[
                ("discount_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "discount_type",
                    models.CharField(
                        choices=[("percentage", "Процентная"), ("amount", "Фиксированная")],
                        default="percentage",
                        max_length=15,
                    ),
                ),
                (
                    "value",
                    models.FloatField(default=0, help_text="Процент скидки или сумма скидки"),
                ),
                ("description", models.CharField(blank=True, max_length=400)),
                (
                    "start",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2025, 2, 18, 12, 10, 6, 586689, tzinfo=datetime.timezone.utc
                        )
                    ),
                ),
                (
                    "end",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2025, 2, 18, 12, 10, 6, 586689, tzinfo=datetime.timezone.utc
                        )
                    ),
                ),
                ("active", models.BooleanField()),
                ("task_id_start", models.CharField(blank=True, max_length=255, null=True)),
                ("task_id_end", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="shop.category",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="shop.product",
                    ),
                ),
                (
                    "subcategory",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="shop.subcategory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserAddress",
            fields=[
                ("address_id", models.AutoField(primary_key=True, serialize=False)),
                ("street", models.CharField(db_index=True, help_text="Улица", max_length=100)),
                (
                    "building",
                    models.CharField(blank=True, help_text="Дом", max_length=100, null=True),
                ),
                (
                    "apartment",
                    models.CharField(blank=True, help_text="Квартира", max_length=100, null=True),
                ),
                (
                    "address_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="address",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserBonusSystem",
            fields=[
                ("bonus_id", models.AutoField(primary_key=True, serialize=False)),
                ("bonus_ammount", models.IntegerField()),
                (
                    "user_bonus",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bonus",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
